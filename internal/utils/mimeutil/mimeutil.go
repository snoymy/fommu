package mimeutil

import "strings"

func GetExtensionFromMIME(mimeType string) string {
    mimeToExtension := map[string]string{
        "application/atom+xml":           ".atom",
        "application/ecmascript":         ".ecma",
        "application/EDI-X12":            ".edi",
        "application/EDIFACT":            ".edi",
        "application/json":               ".json",
        "application/javascript":         ".js",
        "application/octet-stream":       ".bin",
        "application/ogg":                ".ogg",
        "application/pdf":                ".pdf",
        "application/xhtml+xml":          ".xhtml",
        "application/xml-dtd":            ".dtd",
        "application/zip":                ".zip",
        "audio/midi":                     ".midi",
        "audio/mpeg":                     ".mp3",
        "audio/ogg":                      ".ogg",
        "audio/x-wav":                    ".wav",
        "image/gif":                      ".gif",
        "image/jpeg":                     ".jpg",
        "image/png":                      ".png",
        "image/svg+xml":                  ".svg",
        "image/tiff":                     ".tiff",
        "image/vnd.microsoft.icon":       ".ico",
        "text/calendar":                  ".ics",
        "text/css":                       ".css",
        "text/csv":                       ".csv",
        "text/html":                      ".html",
        "text/javascript":                ".js",
        "text/plain":                     ".txt",
        "text/xml":                       ".xml",
        "video/3gpp":                     ".3gp",
        "video/mp4":                      ".mp4",
        "video/mpeg":                     ".mpeg",
        "video/quicktime":                ".mov",
        "video/webm":                     ".webm",
        "video/x-flv":                    ".flv",
    }
    if extension, ok := mimeToExtension[mimeType]; ok {
        return extension
    } else {
        return ""
    }
}

func GetMediaTypeFromMime(mimeType string) string {
    mimeToMediaType := map[string]string{
        "application/atom+xml":        "document",
        "application/ecmascript":      "document",
        "application/EDI-X12":         "document",
        "application/EDIFACT":         "document",
        "application/json":            "document",
        "application/javascript":      "document",
        "application/octet-stream":    "document",
        "application/ogg":             "audio",
        "application/pdf":             "document",
        "application/xhtml+xml":       "document",
        "application/xml-dtd":         "document",
        "application/zip":             "document",
        "audio/midi":                  "audio",
        "audio/mpeg":                  "audio",
        "audio/ogg":                   "audio",
        "audio/x-wav":                 "audio",
        "image/gif":                   "image",
        "image/jpeg":                  "image",
        "image/png":                   "image",
        "image/svg+xml":               "image",
        "image/tiff":                  "image",
        "image/vnd.microsoft.icon":    "image",
        "text/calendar":               "document",
        "text/css":                    "document",
        "text/csv":                    "document",
        "text/html":                   "document",
        "text/javascript":             "document",
        "text/plain":                  "document",
        "text/xml":                    "document",
        "video/3gpp":                  "video",
        "video/mp4":                   "video",
        "video/mpeg":                  "video",
        "video/quicktime":             "video",
        "video/webm":                  "video",
        "video/x-flv":                 "video",
    }
    if mediaType, ok := mimeToMediaType[mimeType]; ok {
        return mediaType
    } else {
        return "unknown"
    }
}

// GetMIMEType returns the MIME type for a given file extension.
func GetMIMEFromExtension(extension string) string {
    extensionToMIME := map[string]string{
        ".html": "text/html",
        ".htm":  "text/html",
        ".shtml": "text/html",
        ".css": "text/css",
        ".xml": "text/xml",
        ".gif": "image/gif",
        ".jpeg": "image/jpeg",
        ".jpg": "image/jpeg",
        ".js": "application/javascript",
        ".atom": "application/atom+xml",
        ".rss": "application/rss+xml",
        ".mml": "text/mathml",
        ".txt": "text/plain",
        ".jad": "text/vnd.sun.j2me.app-descriptor",
        ".wml": "text/vnd.wap.wml",
        ".htc": "text/x-component",
        ".png": "image/png",
        ".svg": "image/svg+xml",
        ".svgz": "image/svg+xml",
        ".tif": "image/tiff",
        ".tiff": "image/tiff",
        ".wbmp": "image/vnd.wap.wbmp",
        ".webp": "image/webp",
        ".ico": "image/x-icon",
        ".jng": "image/x-jng",
        ".bmp": "image/x-ms-bmp",
        ".woff": "font/woff",
        ".woff2": "font/woff2",
        ".jar": "application/java-archive",
        ".war": "application/java-archive",
        ".ear": "application/java-archive",
        ".json": "application/json",
        ".hqx": "application/mac-binhex40",
        ".doc": "application/msword",
        ".pdf": "application/pdf",
        ".ps": "application/postscript",
        ".eps": "application/postscript",
        ".ai": "application/postscript",
        ".rtf": "application/rtf",
        ".m3u8": "application/vnd.apple.mpegurl",
        ".xls": "application/vnd.ms-excel",
        ".eot": "application/vnd.ms-fontobject",
        ".ppt": "application/vnd.ms-powerpoint",
        ".wmlc": "application/vnd.wap.wmlc",
        ".kml": "application/vnd.google-earth.kml+xml",
        ".kmz": "application/vnd.google-earth.kmz",
        ".7z": "application/x-7z-compressed",
        ".cco": "application/x-cocoa",
        ".jardiff": "application/x-java-archive-diff",
        ".jnlp": "application/x-java-jnlp-file",
        ".run": "application/x-makeself",
        ".pl": "application/x-perl",
        ".pm": "application/x-perl",
        ".prc": "application/x-pilot",
        ".pdb": "application/x-pilot",
        ".rar": "application/x-rar-compressed",
        ".rpm": "application/x-redhat-package-manager",
        ".sea": "application/x-sea",
        ".swf": "application/x-shockwave-flash",
        ".sit": "application/x-stuffit",
        ".tcl": "application/x-tcl",
        ".tk": "application/x-tcl",
        ".der": "application/x-x509-ca-cert",
        ".pem": "application/x-x509-ca-cert",
        ".crt": "application/x-x509-ca-cert",
        ".xpi": "application/x-xpinstall",
        ".xhtml": "application/xhtml+xml",
        ".xspf": "application/xspf+xml",
        ".zip": "application/zip",
        ".bin": "application/octet-stream",
        ".exe": "application/octet-stream",
        ".dll": "application/octet-stream",
        ".deb": "application/octet-stream",
        ".dmg": "application/octet-stream",
        ".iso": "application/octet-stream",
        ".img": "application/octet-stream",
        ".msi": "application/octet-stream",
        ".msp": "application/octet-stream",
        ".msm": "application/octet-stream",
        ".mid": "audio/midi",
        ".midi": "audio/midi",
        ".kar": "audio/midi",
        ".mp3": "audio/mpeg",
        ".ogg": "audio/ogg",
        ".m4a": "audio/x-m4a",
        ".ra": "audio/x-realaudio",
        ".3gpp": "video/3gpp",
        ".3gp": "video/3gpp",
        ".ts": "video/mp2t",
        ".mp4": "video/mp4",
        ".mpeg": "video/mpeg",
        ".mpg": "video/mpeg",
        ".mov": "video/quicktime",
        ".webm": "video/webm",
        ".flv": "video/x-flv",
        ".m4v": "video/x-m4v",
        ".mng": "video/x-mng",
        ".asx": "video/x-ms-asf",
        ".asf": "video/x-ms-asf",
        ".wmv": "video/x-ms-wmv",
        ".avi": "video/x-msvideo",
    }
    if mimeType, ok := extensionToMIME[strings.ToLower(extension)]; ok {
        return mimeType
    }
    return "application/octet-stream" // Default MIME type
}
